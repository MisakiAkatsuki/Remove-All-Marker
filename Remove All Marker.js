// Generated by CoffeeScript 1.7.1

/*
  Remove All Marker
    (C) あかつきみさき(みくちぃP)

  このスクリプトについて
    選択したレイヤーのマーカーをすべて削除します.

  使用方法
    レイヤーを選択してからスクリプトを実行してください.

  動作環境
    Adobe After Effects CS5以上

  バージョン情報
    2014/09/15 Ver 1.0.0 Release
 */

(function() {
  var ADBE_MARKER, RAMData, actComp, entryFunc, getLocalizedText, isCompActive, isLayerSelected, runAEVersionCheck, selLayers, undoEntryFunc;

  RAMData = (function() {
    var canRunVersionC, canRunVersionNum, guid, scriptName, scriptURLName, scriptURLVersion, scriptVersionNumber;
    scriptName = "Remove All Marker";
    scriptURLName = "RemoveAllMarker";
    scriptVersionNumber = "1.0.0";
    scriptURLVersion = 100;
    canRunVersionNum = 10.0;
    canRunVersionC = "CS5";
    guid = "{C479125A-708F-4E65-9093-D0251374BD00}";
    return {
      getScriptName: function() {
        return scriptName;
      },
      getScriptURLName: function() {
        return scriptURLName;
      },
      getScriptVersionNumber: function() {
        return scriptVersionNumber;
      },
      getScriptURLVersion: function() {
        return scriptURLVersion;
      },
      getCanRunVersionNum: function() {
        return canRunVersionNum;
      },
      getCanRunVersionC: function() {
        return canRunVersionC;
      },
      getGuid: function() {
        return guid;
      }
    };
  })();

  ADBE_MARKER = "ADBE Marker";

  Property.prototype.keyTimes = function() {
    var index, j, _i, _ref;
    index = [];
    for (j = _i = 1, _ref = this.numKeys; _i <= _ref; j = _i += 1) {
      index.push(this.keyTime(j));
    }
    return index;
  };

  Property.prototype.keyValues = function() {
    var index, j, _i, _ref;
    index = [];
    for (j = _i = 1, _ref = this.numKeys; _i <= _ref; j = _i += 1) {
      index.push(this.keyValue(j));
    }
    return index;
  };

  isCompActive = function(selComp) {
    if (!(selComp && selComp instanceof CompItem)) {
      alert("Select Composition");
      return false;
    } else {
      return true;
    }
  };

  isLayerSelected = function(selLayers) {
    if (selLayers.length === 0) {
      alert("Select Layers & Properties");
      return false;
    } else {
      return true;
    }
  };

  runAEVersionCheck = function(AEVersion) {
    if (parseFloat(app.version) < AEVersion.getCanRunVersionNum()) {
      alert("This script requires After Effects " + (AEVersion.getCanRunVersionC()) + " or greater.");
      return false;
    } else {
      return true;
    }
  };

  getLocalizedText = function(str) {
    if (app.language === Language.JAPANESE) {
      return str.jp;
    } else {
      return str.en;
    }
  };

  entryFunc = function() {
    var i, j, keys, _i, _j, _ref, _ref1;
    for (i = _i = 0, _ref = selLayers.length; _i < _ref; i = _i += 1) {
      keys = selLayers[i].property(ADBE_MARKER).keyTimes();
      for (j = _j = 0, _ref1 = keys.length; _j < _ref1; j = _j += 1) {
        selLayers[i].property(ADBE_MARKER).removeKey(1);
      }
    }
    return 0;
  };

  undoEntryFunc = function(data) {
    app.beginUndoGroup(data.getScriptName());
    entryFunc();
    app.endUndoGroup();
    return 0;
  };

  if (!runAEVersionCheck(RAMData)) {
    return 0;
  }

  actComp = app.project.activeItem;

  if (!isCompActive(actComp)) {
    return 0;
  }

  selLayers = actComp.selectedLayers;

  if (!isLayerSelected(selLayers)) {
    return 0;
  }

  undoEntryFunc(RAMData);

  return 0;

}).call(this);
